import "../Css/Dashboard.css"; 
import Sidebar from "../Sidebar";
import SearchBar from "../SearchBar";
import { useNavigate } from "react-router-dom";
import { ChangeEvent, useEffect, useState } from "react";
import axios from "axios";

interface Home {
    text: string;
    video: File | null;
    image: File | null;
    clientvideo: File | null;
    clientimage: File | null;
    teamtext: string;
    teamvideo: File | null;
    teamimage: File | null;
    servicename: string;
    serviceimage: File | null;
    servicevideo: File | null;
    id?: number;
}

const HomeDashboard: React.FC = () => {
    const [home, setHome] = useState<Home>({
        text: "",
        video: null,
        image: null,
        clientvideo: null,
        clientimage: null,
        teamtext: "",
        teamvideo: null,
        teamimage: null,
        servicename: "",
        serviceimage: null,
        servicevideo: null,
    });
    const [fileName, setFileName] = useState<string>('Click to upload');
    const [homeExists, setHomeExists] = useState<boolean>(true);
    const navigate = useNavigate();

    useEffect(() => {
        const fetchHomeData = async () => {
            const token = localStorage.getItem("access_token");

            if (!token) {
                navigate("/login");
                return;
            }

            try {
                const response = await axios.get("http://127.0.0.1:8000/home_dashboard/", {
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                });

                if (response.data.length > 0) {
                    setHome(response.data[0]);
                    setHomeExists(true);
                } else {
                    setHomeExists(true);
                }
            } catch (error: unknown) {
                if (axios.isAxiosError(error) && error.response && error.response.status === 401) {
                    navigate("/login");
                } else {
                    console.error("Error fetching data:", error);
                }
            }
        };

        fetchHomeData();
    }, [navigate]);

    const handleTextChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
        const { name, value } = e.target;
        setHome({ ...home, [name]: value });
    };

    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>, field: keyof Home) => {
        const file = e.target.files ? e.target.files[0] : null;
    
        if (file) {
            if (field === 'image' && !file.type.startsWith('image/')) {
                alert('Please upload a valid image file.');
                return;
            }
            if (field === 'video' && !file.type.startsWith('video/')) {
                alert('Please upload a valid video file.');
                return;
            }
    
            setHome({ ...home, [field]: file });
            setFileName(`File: ${file.name}`);
            console.log(`Selected ${field}:`, file); // Log the selected file
        } else {
            setFileName('Click to upload');
            console.log(`No file selected for ${field}`); // Log if no file is selected
        }
    };

    const handleSave = async () => {
        const formData = new FormData();

    Object.entries(home).forEach(([key, value]) => {
        if (value instanceof File) {
            formData.append(key, value);
        } else if (value) {
            formData.append(key, value);
        }
    });
        for (const [key, value] of formData.entries()) {
            console.log(key, value); // Log key-value pairs in FormData
        }

        try {
            const token = localStorage.getItem("access_token");
            const headers = {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'multipart/form-data',
            };

            if (home.id) {
                const response = await axios.put(`http://127.0.0.1:8000/home_dashboard/${home.id}/`, formData, { headers });
                console.log("Home updated:", response.data);
                alert('Home updated successfully!');
            } else {
                const response = await axios.post("http://127.0.0.1:8000/home_dashboard/", formData, { headers });
                console.log("Home saved:", response.data);
                alert('Home saved successfully!');
            }
        } catch (error) {
            if (axios.isAxiosError(error) && error.response) {
                console.error("Error saving data:", error.response.data);
                alert(`Error saving data: ${JSON.stringify(error.response.data)}`);
            } else {
                console.error("Error saving data:", error);
                alert('Error saving data.');
            }
        }
    };

    return (
        <div className="dashboard-container">
            <Sidebar />
            <div className="main-content">
                <SearchBar />
                <div className="section intro-session">
                    <h2>INTRO Session</h2>
                    {homeExists ? (
                        <>
                            <label>Text</label>
                            <div className="intro-section1">
                                <textarea
                                    name="text"
                                    value={home.text}
                                    placeholder="Write here..."
                                    className="intro-text"
                                    onChange={handleTextChange}
                                />
                                <div>
                                    <label htmlFor="image-upload" className="file-upload-label">
                                        Upload Image
                                        <input
                                            id="image-upload"
                                            type="file"
                                            accept="image/*"
                                            onChange={(e) => handleFileChange(e, 'image')}
                                            className="file-upload-input"
                                        />
                                    </label>
                                    <label htmlFor="video-upload" className="file-upload-label">
                                        Upload Video
                                        <input
                                            id="video-upload"
                                            type="file"
                                            accept="video/*"
                                            onChange={(e) => handleFileChange(e, 'video')}
                                            className="file-upload-input"
                                        />
                                    </label>
                                </div>
                            </div>
                            <button className="save-btn" onClick={handleSave}>SAVE</button>
                        </>
                    ) : (
                        <p>No home data available.</p>
                    )}
                </div>
                
                {/* Other sections here, similar to the above with appropriate field names */}
                
                <div className="section clients-session">
                    <h2>Clients Session</h2>
                    <label>Text</label>
                    <div className="intro-section1">
                        <div>
                            <label htmlFor="client-image-upload" className="file-upload-label">
                                Upload Image
                                <input
                                    id="client-image-upload"
                                    type="file"
                                    accept="image/*"
                                    onChange={(e) => handleFileChange(e, 'clientimage')}
                                    className="file-upload-input"
                                />
                            </label>
                            <label htmlFor="client-video-upload" className="file-upload-label">
                                Upload Video
                                <input
                                    id="client-video-upload"
                                    type="file"
                                    accept="video/*"
                                    onChange={(e) => handleFileChange(e, 'clientvideo')}
                                    className="file-upload-input"
                                />
                            </label>
                        </div>
                    </div>
                    <button className="save-btn" onClick={handleSave}>SAVE</button>
                </div>

                <div className="section services-session">
                    <h2>Services Session</h2>
                    <div className="service-container">
                        <div className="service service1">
                            <input
                                type="text"
                                name="servicename"
                                value={home.servicename}
                                placeholder="Media Production"
                                onChange={handleTextChange}
                            />
                            <div>
                                <label htmlFor="service-image-upload" className="file-upload-label">
                                    Upload Image
                                    <input
                                        id="service-image-upload"
                                        type="file"
                                        accept="image/*"
                                        onChange={(e) => handleFileChange(e, 'serviceimage')}
                                        className="file-upload-input"
                                    />
                                </label>
                                <label htmlFor="service-video-upload" className="file-upload-label">
                                    Upload Video
                                    <input
                                        id="service-video-upload"
                                        type="file"
                                        accept="video/*"
                                        onChange={(e) => handleFileChange(e, 'servicevideo')}
                                        className="file-upload-input"
                                    />
                                </label>
                            </div>
                        </div>
                        <button className="add-service-btn">+ Add Service</button>
                    </div>
                    <button className="save-btn" onClick={handleSave}>SAVE</button>
                </div>

                <div className="section team-session">
                    <h2>Team Session</h2>
                    <label>Text</label>
                    <div className="intro-section1">
                        <textarea
                            name="teamtext"
                            value={home.teamtext}
                            placeholder="Write here..."
                            className="intro-text"
                            onChange={handleTextChange}
                        />
                        <div>
                            <label htmlFor="team-image-upload" className="file-upload-label">
                                Upload Image
                                <input
                                    id="team-image-upload"
                                    type="file"
                                    accept="image/*"
                                    onChange={(e) => handleFileChange(e, 'teamimage')}
                                    className="file-upload-input"
                                />
                            </label>
                            <label htmlFor="team-video-upload" className="file-upload-label">
                                Upload Video
                                <input
                                    id="team-video-upload"
                                    type="file"
                                    accept="video/*"
                                    onChange={(e) => handleFileChange(e, 'teamvideo')}
                                    className="file-upload-input"
                                />
                            </label>
                        </div>
                    </div>
                    <button className="save-btn" onClick={handleSave}>SAVE</button>
                </div>
            </div>
        </div>
    );
};

export default HomeDashboard;
